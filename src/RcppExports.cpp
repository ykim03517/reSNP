// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// Multmat
NumericMatrix Multmat(Rcpp::NumericMatrix tmm, Rcpp::NumericMatrix tm22);
RcppExport SEXP _reSNP_Multmat(SEXP tmmSEXP, SEXP tm22SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type tmm(tmmSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type tm22(tm22SEXP);
    rcpp_result_gen = Rcpp::wrap(Multmat(tmm, tm22));
    return rcpp_result_gen;
END_RCPP
}
// arrayC
NumericVector arrayC(NumericVector input, IntegerVector dim);
RcppExport SEXP _reSNP_arrayC(SEXP inputSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type input(inputSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(arrayC(input, dim));
    return rcpp_result_gen;
END_RCPP
}
// colMax
NumericVector colMax(NumericMatrix m);
RcppExport SEXP _reSNP_colMax(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(colMax(m));
    return rcpp_result_gen;
END_RCPP
}
// gridG
NumericMatrix gridG(NumericVector g, NumericVector seqx);
RcppExport SEXP _reSNP_gridG(SEXP gSEXP, SEXP seqxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type g(gSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type seqx(seqxSEXP);
    rcpp_result_gen = Rcpp::wrap(gridG(g, seqx));
    return rcpp_result_gen;
END_RCPP
}
// rowMax
NumericVector rowMax(NumericMatrix m);
RcppExport SEXP _reSNP_rowMax(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(rowMax(m));
    return rcpp_result_gen;
END_RCPP
}
// trueG
NumericVector trueG(NumericVector g, double c);
RcppExport SEXP _reSNP_trueG(SEXP gSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(trueG(g, c));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_reSNP_Multmat", (DL_FUNC) &_reSNP_Multmat, 2},
    {"_reSNP_arrayC", (DL_FUNC) &_reSNP_arrayC, 2},
    {"_reSNP_colMax", (DL_FUNC) &_reSNP_colMax, 1},
    {"_reSNP_gridG", (DL_FUNC) &_reSNP_gridG, 2},
    {"_reSNP_rowMax", (DL_FUNC) &_reSNP_rowMax, 1},
    {"_reSNP_trueG", (DL_FUNC) &_reSNP_trueG, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_reSNP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
